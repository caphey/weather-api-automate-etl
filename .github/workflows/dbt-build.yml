name: dbt-compile-minimal

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: analytics
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DBT_POSTGRES_HOST: localhost
      DBT_POSTGRES_USER: postgres
      DBT_POSTGRES_PASSWORD: postgres
      DBT_POSTGRES_PORT: 5432
      DBT_POSTGRES_DB: analytics
      DBT_POSTGRES_SCHEMA: dbt_default
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dbt packages
        run: |
          pip install --upgrade pip
          # Aligner dbt-core et adapter (1.6.x). Ajouter psycopg2-binary pour psql libs.
          pip install --no-cache-dir dbt-core==1.6.0 dbt-postgres==1.6.0 psycopg2-binary

      - name: Wait for Postgres (robuste)
        run: |
          echo "Attente disponibilité Postgres..."
          for i in {1..30}; do
            if pg_isready -h localhost -U postgres >/dev/null 2>&1; then
              echo "Postgres OK"; break; fi
            sleep 2
          done
          pg_isready -h localhost -U postgres
          # Validation de connexion
          PGPASSWORD=postgres psql -h localhost -U postgres -d analytics -c 'select 1;' || (echo 'Echec connexion DB' && exit 1)

      - name: Create schemas
        run: |
          for schema in raw staging marts; do
            PGPASSWORD=postgres psql -h localhost -U postgres -d analytics -c "CREATE SCHEMA IF NOT EXISTS $schema;"
          done

      - name: Install dbt packages + compile
        working-directory: dbt
        env:
          DBT_PROFILES_DIR: .
        run: |
          dbt deps
          dbt debug --profiles-dir . --target dev
          dbt compile --profiles-dir . --target dev
          echo "Compilation terminée (workflow minimal)." >> $GITHUB_STEP_SUMMARY

      # --- Étapes optionnelles à réactiver plus tard ---
      # - name: Full build (tests + run)
      #   working-directory: dbt
      #   run: dbt build --profiles-dir . --target dev
      #
      # - name: Generate docs
      #   working-directory: dbt
      #   run: dbt docs generate
      #
      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dbt-docs
      #     path: |
      #       dbt/target/index.html
      #       dbt/target/catalog.json
      #       dbt/target/manifest.json
      #       dbt/target/run_results.json
